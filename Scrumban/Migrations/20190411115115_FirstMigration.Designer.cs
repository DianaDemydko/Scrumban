// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Scrumban.DataAccessLayer;

namespace Scrumban.Migrations
{
    [DbContext(typeof(ScrumbanContext))]
    [Migration("20190411115115_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.DefectDAL", b =>
                {
                    b.Property<int>("DefectId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("Priority");

                    b.Property<string>("Severity");

                    b.Property<string>("State");

                    b.Property<string>("Status");

                    b.Property<int?>("StoryId");

                    b.HasKey("DefectId");

                    b.ToTable("Defects");
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.FeatureDAL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("OwnerID");

                    b.Property<int?>("Priority");

                    b.Property<int?>("ReleaseID");

                    b.Property<int?>("StateID");

                    b.Property<DateTime>("Time");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.HasIndex("StateID");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.OwnerDAL", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("OwnerDAL");
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.PriorityDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Priorities");

                    b.HasData(
                        new { Id = 1, Name = "Low" },
                        new { Id = 2, Name = "Medium" },
                        new { Id = 3, Name = "Heigh" },
                        new { Id = 4, Name = "Immediate" }
                    );
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.SprintDAL", b =>
                {
                    b.Property<int>("Sprint_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name");

                    b.Property<int>("SprintStatus_id");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Sprint_id");

                    b.HasIndex("SprintStatus_id");

                    b.ToTable("Sprint");

                    b.HasData(
                        new { Sprint_id = 1, Description = "HUGE desc ======== ============== ========= ===============", EndDate = new DateTime(2019, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "AAaSprint", SprintStatus_id = 1, StartDate = new DateTime(2019, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Sprint_id = 2, Description = "empty", EndDate = new DateTime(2019, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "bbbb Sprint", SprintStatus_id = 1, StartDate = new DateTime(2019, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Sprint_id = 3, Description = "-", EndDate = new DateTime(2019, 10, 27, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "anonimous", SprintStatus_id = 1, StartDate = new DateTime(2019, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Sprint_id = 4, Description = "desc", EndDate = new DateTime(2019, 12, 3, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "nameless", SprintStatus_id = 1, StartDate = new DateTime(2019, 8, 17, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Sprint_id = 5, Description = "666 Don't delete this 666", EndDate = new DateTime(2018, 4, 7, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Evil Sprint 666", SprintStatus_id = 1, StartDate = new DateTime(2018, 3, 13, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Sprint_id = 6, Description = "some desc", EndDate = new DateTime(2018, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "XXXX", SprintStatus_id = 1, StartDate = new DateTime(2018, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.SprintStatusDAL", b =>
                {
                    b.Property<int>("SprintStatus_id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("StatusName");

                    b.HasKey("SprintStatus_id");

                    b.ToTable("SprintStatus");

                    b.HasData(
                        new { SprintStatus_id = 1, StatusName = "Not Started" },
                        new { SprintStatus_id = 2, StatusName = "Started" },
                        new { SprintStatus_id = 3, StatusName = "Completed" },
                        new { SprintStatus_id = 4, StatusName = "Canceled" }
                    );
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.StateDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("States");

                    b.HasData(
                        new { Id = 1, Name = "Ready To Start" },
                        new { Id = 2, Name = "In Progress" },
                        new { Id = 3, Name = "Development Complete" },
                        new { Id = 4, Name = "Test Complete" },
                        new { Id = 5, Name = "Accepted" }
                    );
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.StoryDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int>("PriorityId");

                    b.Property<int?>("ProgrammerId");

                    b.Property<int>("StoryStateId");

                    b.Property<int>("TaskId");

                    b.HasKey("Id");

                    b.HasIndex("PriorityId");

                    b.HasIndex("StoryStateId");

                    b.ToTable("Stories");

                    b.HasData(
                        new { Id = 1, Description = "Description1", Name = "Story1", PriorityId = 2, StoryStateId = 1, TaskId = 0 },
                        new { Id = 2, Description = "Description2", Name = "Story2", PriorityId = 2, StoryStateId = 1, TaskId = 0 },
                        new { Id = 3, Description = "Description3", Name = "Story3", PriorityId = 2, StoryStateId = 1, TaskId = 0 }
                    );
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.StoryStateDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("StoryStates");

                    b.HasData(
                        new { Id = 1, Name = "Non Started" },
                        new { Id = 2, Name = "In Progress" },
                        new { Id = 3, Name = "Rejected" },
                        new { Id = 4, Name = "In Complete" },
                        new { Id = 5, Name = "Done" },
                        new { Id = 6, Name = "Accepted" }
                    );
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.TaskDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime?>("FinishDate");

                    b.Property<string>("Name");

                    b.Property<int>("PriorityId");

                    b.Property<int?>("ProgrammerId");

                    b.Property<DateTime?>("StartDate");

                    b.Property<int?>("StoryId");

                    b.Property<int>("TaskStateId");

                    b.HasKey("Id");

                    b.HasIndex("PriorityId");

                    b.HasIndex("TaskStateId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new { Id = 1, Name = "Task1", PriorityId = 1, TaskStateId = 1 },
                        new { Id = 2, Name = "Task2", PriorityId = 1, TaskStateId = 1 },
                        new { Id = 3, Name = "Task3", PriorityId = 1, TaskStateId = 1 }
                    );
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.TaskStateDAL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TaskStates");

                    b.HasData(
                        new { Id = 1, Name = "To Do" },
                        new { Id = 2, Name = "In Progress" },
                        new { Id = 3, Name = "Completed" }
                    );
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.TeamDAL", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("Project");

                    b.HasKey("TeamID");

                    b.ToTable("Teams");

                    b.HasData(
                        new { TeamID = 1, Name = "Lv-396.1 .Net", Project = "Scrumban" },
                        new { TeamID = 2, Name = "New Team", Project = "New Project" }
                    );
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.UsersDAL", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("Password");

                    b.Property<int>("PictureID");

                    b.Property<int>("RoleID");

                    b.Property<string>("Surname");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.FeatureDAL", b =>
                {
                    b.HasOne("Scrumban.DataAccessLayer.Models.OwnerDAL", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID");

                    b.HasOne("Scrumban.DataAccessLayer.Models.StateDAL", "State")
                        .WithMany()
                        .HasForeignKey("StateID");
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.SprintDAL", b =>
                {
                    b.HasOne("Scrumban.DataAccessLayer.Models.SprintStatusDAL", "Status")
                        .WithMany()
                        .HasForeignKey("SprintStatus_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.StoryDAL", b =>
                {
                    b.HasOne("Scrumban.DataAccessLayer.Models.PriorityDAL", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Scrumban.DataAccessLayer.Models.StoryStateDAL", "StoryState")
                        .WithMany()
                        .HasForeignKey("StoryStateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Scrumban.DataAccessLayer.Models.TaskDAL", b =>
                {
                    b.HasOne("Scrumban.DataAccessLayer.Models.PriorityDAL", "Priority")
                        .WithMany()
                        .HasForeignKey("PriorityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Scrumban.DataAccessLayer.Models.TaskStateDAL", "TaskState")
                        .WithMany()
                        .HasForeignKey("TaskStateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
